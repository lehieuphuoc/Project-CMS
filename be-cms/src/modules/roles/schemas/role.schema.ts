import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';
import { HydratedDocument } from 'mongoose';

export type RoleDocument = HydratedDocument<Role>;

/**
 * Schema: Vai tr√≤ (Role)
 * D√πng cho h·ªá th·ªëng RBAC (Role-Based Access Control)
 * 
 * - M·ªói role ƒë·∫°i di·ªán cho m·ªôt nh√≥m ng∆∞·ªùi d√πng c√≥ quy·ªÅn h·∫°n c·ª• th·ªÉ.
 * - V√≠ d·ª•: Admin, Editor, Author, Viewer, Customer, v.v.
 */
@Schema({
  timestamps: true, // T·ª± ƒë·ªông th√™m createdAt, updatedAt
  toJSON: { virtuals: true },
  toObject: { virtuals: true },
})
export class Role {
  // ==============================
  // üß± Th√¥ng tin c∆° b·∫£n
  // ==============================

  @Prop({
    required: [true, 'T√™n vai tr√≤ l√† b·∫Øt bu·ªôc'],
    unique: true,
    trim: true,
    lowercase: true, // ƒê·∫£m b·∫£o kh√¥ng ph√¢n bi·ªát hoa th∆∞·ªùng (vd: "Admin" = "admin")
    index: true,     // TƒÉng t·ªëc t√¨m ki·∫øm
  })
  name: string; // V√≠ d·ª•: 'admin', 'editor', 'user'

  @Prop({
    trim: true,
    default: '',
  })
  displayName: string; // T√™n hi·ªÉn th·ªã r√µ r√†ng: "Qu·∫£n tr·ªã vi√™n", "Bi√™n t·∫≠p vi√™n"

  @Prop({
    trim: true,
    default: '',
  })
  description: string; // M√¥ t·∫£ chi ti·∫øt quy·ªÅn h·∫°n ho·∫∑c vai tr√≤ n√†y d√πng ƒë·ªÉ l√†m g√¨

  // ==============================
  // üîë Quy·ªÅn h·∫°n
  // ==============================

  @Prop({
    type: [String],
    default: [],
  })
  permissions: string[]; 
  /**
   * Danh s√°ch c√°c "key" quy·ªÅn h·∫°n d·∫°ng string (v√≠ d·ª•: 'user.create', 'post.edit', 'seo.manage').
   * M·∫£ng n√†y gi√∫p b·∫°n d·ªÖ d√†ng ki·ªÉm tra quy·ªÅn khi ph√¢n quy·ªÅn th·ªß c√¥ng ho·∫∑c k·∫øt h·ª£p v·ªõi h·ªá th·ªëng RBAC.
   */

  // ==============================
  // ‚öôÔ∏è C√°c c·ªù ƒë·∫∑c bi·ªát (n·∫øu c·∫ßn)
  // ==============================

  @Prop({ default: false })
  isSystemRole: boolean; 
  /**
   * C·ªù cho bi·∫øt ƒë√¢y l√† role h·ªá th·ªëng (vd: 'admin', 'superadmin'),
   * kh√¥ng ƒë∆∞·ª£c x√≥a/s·ª≠a t·ª´ giao di·ªán ng∆∞·ªùi d√πng.
   */
}

export const RoleSchema = SchemaFactory.createForClass(Role);

// ==============================
// üìà Index & t·ªëi ∆∞u truy v·∫•n
// ==============================

// T·∫°o index text ƒë·ªÉ h·ªó tr·ª£ t√¨m ki·∫øm nhanh theo t√™n / m√¥ t·∫£
RoleSchema.index(
  { name: 'text', displayName: 'text', description: 'text' },
  {
    weights: { name: 10, displayName: 5 },
    name: 'role_search_index',
  },
);
